// sw.js - –í–ï–†–°–ò–Ø –î–õ–Ø –ö–õ–ò–ï–ù–¢–û–í
const CACHE_NAME = 'app-v' + Date.now(); // –£–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –∫–∞–∂–¥—ã–π –¥–µ–ø–ª–æ–π

self.addEventListener('install', (event) => {
    self.skipWaiting(); // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è
    console.log('üîÑ NEW VERSION INSTALLED:', CACHE_NAME);
});

self.addEventListener('activate', (event) => {
    alert("test message")
    event.waitUntil(
        caches.keys().then(cacheNames => {
            console.log('üóëÔ∏è Deleting old caches:', cacheNames);
            return Promise.all(
                cacheNames.map(cacheName => {
                    // –£–¥–∞–ª—è–µ–º –í–°–ï —Å—Ç–∞—Ä—ã–µ –∫—ç—à–∏
                    return caches.delete(cacheName);
                })
            );
        }).then(() => {
            console.log('‚úÖ All old caches deleted');
            return self.clients.claim();
        })
    );
});

self.addEventListener('fetch', (event) => {
    // Network Only - –ù–ò–ß–ï–ì–û –Ω–µ –∫—ç—à–∏—Ä—É–µ–º
    event.respondWith(
        fetch(event.request)
            .catch(error => {
                console.log('üåê Network failed:', error);
                // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ñ–ª–∞–π–Ω - –ø—Ä–æ–±—É–µ–º –∫—ç—à
                return caches.match(event.request)
                    .then(cachedResponse => {
                        if (cachedResponse) {
                            console.log('üì¶ Serving from cache (offline mode)');
                            return cachedResponse;
                        }
                        // –û—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü–∞
                        return new Response(`
                            <html>
                                <body style="padding: 20px; text-align: center;">
                                    <h1>–û—Ñ–ª–∞–π–Ω</h1>
                                    <p>–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º</p>
                                    <button onclick="location.reload()">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
                                </body>
                            </html>
                        `, {
                            headers: {'Content-Type': 'text/html'}
                        });
                    });
            })
    );
});